<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinmimoney.web.p2pnew.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.yinmimoney.web.p2pnew.pojo.Order" extends="associationMap">
	<id column="id" property="id" />
	<result column="buyer_code" property="buyerCode" />
	<result column="seller_code" property="sellerCode" />
	<result column="city_code" property="cityCode" />
	<result column="order_no" property="orderNo" />
	<result column="status" property="status" />
	<result column="amount" property="amount" />
	<result column="currency" property="currency" />
	<result column="txid" property="txid" />
	<result column="normalizedTxid" property="normalizedTxid" />
	<result column="satoshis" property="satoshis" />
	<result column="buttonData" property="buttonData" />
	<result column="create_time" property="createTime" />
	<result column="update_time" property="updateTime" />
	<result column="plat_amount" property="platAmount" />
	<result column="seller_amount" property="sellerAmount" />
  </resultMap>
  <sql id="Base_Column_List" >
		`id`
		,`buyer_code`
		,`seller_code`
		,`city_code`
		,`order_no`
		,`status`
		,`amount`
		,`currency`
		,`txid`
		,`normalizedTxid`
		,`satoshis`
		,`buttonData`
		,`create_time`
		,`update_time`
		,`plat_amount`
		,`seller_amount`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `bc_order`
    WHERE `id` = #{id}
  </select>
  <select id="getByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `bc_order`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
	LIMIT 1
  </select>
  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT ${aggregate_sql} FROM `bc_order`
    <include refid="map_params_where_condition" />
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM `bc_order`
    WHERE `id` = #{id}
  </delete>
  <insert id="insert" parameterType="com.yinmimoney.web.p2pnew.pojo.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `bc_order` (
	  `buyer_code`
	  ,`seller_code`
	  ,`city_code`
	  ,`order_no`
	  ,`status`
	  ,`amount`
	  ,`currency`
	  ,`txid`
	  ,`normalizedTxid`
	  ,`satoshis`
	  ,`buttonData`
	  ,`create_time`
	  ,`update_time`
	  ,`plat_amount`
	  ,`seller_amount`
      )
    VALUES (
		  
		  #{buyerCode}
		  ,
		  #{sellerCode}
		  ,
		  #{cityCode}
		  ,
		  #{orderNo}
		  ,
		  #{status}
		  ,
		  #{amount}
		  ,
		  #{currency}
		  ,
		  #{txid}
		  ,
		  #{normalizedTxid}
		  ,
		  #{satoshis}
		  ,
		  #{buttonData}
		  ,
		  <if test="createTime != null" >
			#{createTime}
      </if>
      <if test="createTime == null" >
      NOW()
		  </if>
		  ,
		  <if test="updateTime != null" >
			#{updateTime}
      </if>
      <if test="updateTime == null" >
      NOW()
		  </if>
		  ,
		  #{platAmount}
		  ,
		  #{sellerAmount}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yinmimoney.web.p2pnew.pojo.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `bc_order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="buyerCode != null" >
			`buyer_code`,
		  </if>
		  <if test="sellerCode != null" >
			`seller_code`,
		  </if>
		  <if test="cityCode != null" >
			`city_code`,
		  </if>
		  <if test="orderNo != null" >
			`order_no`,
		  </if>
		  <if test="status != null" >
			`status`,
		  </if>
		  <if test="amount != null" >
			`amount`,
		  </if>
		  <if test="currency != null" >
			`currency`,
		  </if>
		  <if test="txid != null" >
			`txid`,
		  </if>
		  <if test="normalizedTxid != null" >
			`normalizedTxid`,
		  </if>
		  <if test="satoshis != null" >
			`satoshis`,
		  </if>
		  <if test="buttonData != null" >
			`buttonData`,
		  </if>
			`create_time`,
			`update_time`,
		  <if test="platAmount != null" >
			`plat_amount`,
		  </if>
		  <if test="sellerAmount != null" >
			`seller_amount`,
		  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="buyerCode != null" >
			#{buyerCode},
		  </if>
		  <if test="sellerCode != null" >
			#{sellerCode},
		  </if>
		  <if test="cityCode != null" >
			#{cityCode},
		  </if>
		  <if test="orderNo != null" >
			#{orderNo},
		  </if>
		  <if test="status != null" >
			#{status},
		  </if>
		  <if test="amount != null" >
			#{amount},
		  </if>
		  <if test="currency != null" >
			#{currency},
		  </if>
		  <if test="txid != null" >
			#{txid},
		  </if>
		  <if test="normalizedTxid != null" >
			#{normalizedTxid},
		  </if>
		  <if test="satoshis != null" >
			#{satoshis},
		  </if>
		  <if test="buttonData != null" >
			#{buttonData},
		  </if>
		  <if test="createTime != null" >
			#{createTime},
      </if>
      <if test="createTime == null" >
      NOW(),
		  </if>
		  <if test="updateTime != null" >
			#{updateTime},
      </if>
      <if test="updateTime == null" >
      NOW(),
		  </if>
		  <if test="platAmount != null" >
			#{platAmount},
		  </if>
		  <if test="sellerAmount != null" >
			#{sellerAmount},
		  </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinmimoney.web.p2pnew.pojo.Order" >
    UPDATE `bc_order`
    <set >
	  <if test="buyerCode != null" >
        `buyer_code` = #{buyerCode},
      </if>
	  <if test="sellerCode != null" >
        `seller_code` = #{sellerCode},
      </if>
	  <if test="cityCode != null" >
        `city_code` = #{cityCode},
      </if>
	  <if test="orderNo != null" >
        `order_no` = #{orderNo},
      </if>
	  <if test="status != null" >
        `status` = #{status},
      </if>
	  <if test="amount != null" >
        `amount` = #{amount},
      </if>
	  <if test="currency != null" >
        `currency` = #{currency},
      </if>
	  <if test="txid != null" >
        `txid` = #{txid},
      </if>
	  <if test="normalizedTxid != null" >
        `normalizedTxid` = #{normalizedTxid},
      </if>
	  <if test="satoshis != null" >
        `satoshis` = #{satoshis},
      </if>
	  <if test="buttonData != null" >
        `buttonData` = #{buttonData},
      </if>
	  <if test="createTime != null" >
        `create_time` = #{createTime},
      </if>
	  <if test="updateTime != null" >
        `update_time` = #{updateTime},
      </if>
	  <if test="platAmount != null" >
        `plat_amount` = #{platAmount},
      </if>
	  <if test="sellerAmount != null" >
        `seller_amount` = #{sellerAmount},
      </if>
    </set>
    WHERE `id` = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinmimoney.web.p2pnew.pojo.Order" >
	UPDATE `bc_order` SET
        `buyer_code` = #{buyerCode},
        `seller_code` = #{sellerCode},
        `city_code` = #{cityCode},
        `order_no` = #{orderNo},
        `status` = #{status},
        `amount` = #{amount},
        `currency` = #{currency},
        `txid` = #{txid},
        `normalizedTxid` = #{normalizedTxid},
        `satoshis` = #{satoshis},
        `buttonData` = #{buttonData},
        `create_time` = #{createTime},
        `update_time` = #{updateTime},
        `plat_amount` = #{platAmount},
        `seller_amount` = #{sellerAmount}
    WHERE `id` = #{id}
  </update>
  <update id="updateByCondition" parameterType="java.util.Map" >
    UPDATE `bc_order`
    <set>
	  <if test="entity.buyerCode != null" >
        `buyer_code` = #{entity.buyerCode},
      </if>
	  <if test="entity.sellerCode != null" >
        `seller_code` = #{entity.sellerCode},
      </if>
	  <if test="entity.cityCode != null" >
        `city_code` = #{entity.cityCode},
      </if>
	  <if test="entity.orderNo != null" >
        `order_no` = #{entity.orderNo},
      </if>
	  <if test="entity.status != null" >
        `status` = #{entity.status},
      </if>
	  <if test="entity.amount != null" >
        `amount` = #{entity.amount},
      </if>
	  <if test="entity.currency != null" >
        `currency` = #{entity.currency},
      </if>
	  <if test="entity.txid != null" >
        `txid` = #{entity.txid},
      </if>
	  <if test="entity.normalizedTxid != null" >
        `normalizedTxid` = #{entity.normalizedTxid},
      </if>
	  <if test="entity.satoshis != null" >
        `satoshis` = #{entity.satoshis},
      </if>
	  <if test="entity.buttonData != null" >
        `buttonData` = #{entity.buttonData},
      </if>
	  <if test="entity.createTime != null" >
        `create_time` = #{entity.createTime},
      </if>
	  <if test="entity.updateTime != null" >
        `update_time` = #{entity.updateTime},
      </if>
	  <if test="entity.platAmount != null" >
        `plat_amount` = #{entity.platAmount},
      </if>
	  <if test="entity.sellerAmount != null" >
        `seller_amount` = #{entity.sellerAmount},
      </if>
      <foreach collection="entity.nullColums" item="nullColum">
        `${nullColum}` = NULL,
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <update id="updateIncreateNumbers" parameterType="java.util.Map" >
    UPDATE `bc_order`
    <set>
      <foreach collection="increateNumbers" item="numberCloums">
        `${numberCloums.column}` = `${numberCloums.column}` + #{numberCloums.number},
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <sql id="map_params_where_condition" >
    <trim prefix="WHERE" prefixOverrides="AND">
	  <if test="id != null" >
        AND `id` = #{id}
	  </if>
	  <if test="buyerCode != null" >
        AND `buyer_code` = #{buyerCode}
	  </if>
	  <if test="sellerCode != null" >
        AND `seller_code` = #{sellerCode}
	  </if>
	  <if test="cityCode != null" >
        AND `city_code` = #{cityCode}
	  </if>
	  <if test="orderNo != null" >
        AND `order_no` = #{orderNo}
	  </if>
	  <if test="status != null" >
        AND `status` = #{status}
	  </if>
	  <if test="amount != null" >
        AND `amount` = #{amount}
	  </if>
	  <if test="currency != null" >
        AND `currency` = #{currency}
	  </if>
	  <if test="txid != null" >
        AND `txid` = #{txid}
	  </if>
	  <if test="normalizedTxid != null" >
        AND `normalizedTxid` = #{normalizedTxid}
	  </if>
	  <if test="satoshis != null" >
        AND `satoshis` = #{satoshis}
	  </if>
	  <if test="buttonData != null" >
        AND `buttonData` = #{buttonData}
	  </if>
	  <if test="createTime != null" >
        AND `create_time` = #{createTime}
	  </if>
	  <if test="updateTime != null" >
        AND `update_time` = #{updateTime}
	  </if>
	  <if test="platAmount != null" >
        AND `plat_amount` = #{platAmount}
	  </if>
	  <if test="sellerAmount != null" >
        AND `seller_amount` = #{sellerAmount}
	  </if>
	  <if test="condition != null">
	  <if test="condition.id != null" >
        AND `id` = #{condition.id}
	  </if>
	  <if test="condition.buyerCode != null" >
        AND `buyer_code` = #{condition.buyerCode}
	  </if>
	  <if test="condition.sellerCode != null" >
        AND `seller_code` = #{condition.sellerCode}
	  </if>
	  <if test="condition.cityCode != null" >
        AND `city_code` = #{condition.cityCode}
	  </if>
	  <if test="condition.orderNo != null" >
        AND `order_no` = #{condition.orderNo}
	  </if>
	  <if test="condition.status != null" >
        AND `status` = #{condition.status}
	  </if>
	  <if test="condition.amount != null" >
        AND `amount` = #{condition.amount}
	  </if>
	  <if test="condition.currency != null" >
        AND `currency` = #{condition.currency}
	  </if>
	  <if test="condition.txid != null" >
        AND `txid` = #{condition.txid}
	  </if>
	  <if test="condition.normalizedTxid != null" >
        AND `normalizedTxid` = #{condition.normalizedTxid}
	  </if>
	  <if test="condition.satoshis != null" >
        AND `satoshis` = #{condition.satoshis}
	  </if>
	  <if test="condition.buttonData != null" >
        AND `buttonData` = #{condition.buttonData}
	  </if>
	  <if test="condition.createTime != null" >
        AND `create_time` = #{condition.createTime}
	  </if>
	  <if test="condition.updateTime != null" >
        AND `update_time` = #{condition.updateTime}
	  </if>
	  <if test="condition.platAmount != null" >
        AND `plat_amount` = #{condition.platAmount}
	  </if>
	  <if test="condition.sellerAmount != null" >
        AND `seller_amount` = #{condition.sellerAmount}
	  </if>
	  </if>
	  <if test="vo != null and !vo.expressionChainList.empty">
        AND
        <foreach collection="vo.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <if test="expressionChainList != null and !expressionChainList.empty">
        AND
        <foreach collection="expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <include refid="map_params_where_condition_ext" />
    </trim>
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM `bc_order`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
    <if test="pageBeginIndex != null and pageSize != null" >
      LIMIT #{pageBeginIndex},#{pageSize}
    </if>
    <if test="pageBeginIndex == null and pageSize != null" >
      LIMIT #{pageSize}
    </if>
    <if test="pageBeginIndex != null and pageSize == null" >
      LIMIT #{pageBeginIndex}
    </if>
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    DELETE
    FROM `bc_order`
    <include refid="map_params_where_condition" />
  </delete>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT COUNT(1)
    FROM `bc_order`
    <include refid="map_params_where_condition" />
  </select>
</mapper>