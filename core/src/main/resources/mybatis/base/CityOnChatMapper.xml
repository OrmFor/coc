<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinmimoney.web.p2pnew.dao.CityOnChatMapper" >
  <resultMap id="BaseResultMap" type="com.yinmimoney.web.p2pnew.pojo.CityOnChat" extends="associationMap">
	<id column="id" property="id" />
	<result column="code" property="code" />
	<result column="city_code" property="cityCode" />
	<result column="content" property="content" />
	<result column="user_code" property="userCode" />
	<result column="user_name" property="userName" />
	<result column="like_number" property="likeNumber" />
	<result column="version" property="version" />
	<result column="txid" property="txid" />
	<result column="add_time" property="addTime" />
	<result column="update_time" property="updateTime" />
	<result column="is_hidden" property="isHidden" />
	<result column="is_valid" property="isValid" />
	<result column="speak_type" property="speakType" />
  </resultMap>
  <sql id="Base_Column_List" >
		`id`
		,`code`
		,`city_code`
		,`content`
		,`user_code`
		,`user_name`
		,`like_number`
		,`version`
		,`txid`
		,`add_time`
		,`update_time`
		,`is_hidden`
		,`is_valid`
		,`speak_type`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `city_on_chat`
    WHERE `id` = #{id}
  </select>
  <select id="getByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `city_on_chat`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
	LIMIT 1
  </select>
  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT ${aggregate_sql} FROM `city_on_chat`
    <include refid="map_params_where_condition" />
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM `city_on_chat`
    WHERE `id` = #{id}
  </delete>
  <insert id="insert" parameterType="com.yinmimoney.web.p2pnew.pojo.CityOnChat" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `city_on_chat` (
	  `code`
	  ,`city_code`
	  ,`content`
	  ,`user_code`
	  ,`user_name`
	  ,`like_number`
	  ,`version`
	  ,`txid`
	  ,`add_time`
	  ,`update_time`
	  ,`is_hidden`
	  ,`is_valid`
	  ,`speak_type`
      )
    VALUES (
		  
		  #{code}
		  ,
		  #{cityCode}
		  ,
		  #{content}
		  ,
		  #{userCode}
		  ,
		  #{userName}
		  ,
		  #{likeNumber}
		  ,
		  #{version}
		  ,
		  #{txid}
		  ,
		  #{addTime}
		  ,
		  #{updateTime}
		  ,
		  #{isHidden}
		  ,
		  #{isValid}
		  ,
		  #{speakType}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yinmimoney.web.p2pnew.pojo.CityOnChat" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `city_on_chat`
    <trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="code != null" >
			`code`,
		  </if>
		  <if test="cityCode != null" >
			`city_code`,
		  </if>
		  <if test="content != null" >
			`content`,
		  </if>
		  <if test="userCode != null" >
			`user_code`,
		  </if>
		  <if test="userName != null" >
			`user_name`,
		  </if>
		  <if test="likeNumber != null" >
			`like_number`,
		  </if>
		  <if test="version != null" >
			`version`,
		  </if>
		  <if test="txid != null" >
			`txid`,
		  </if>
		  <if test="addTime != null" >
			`add_time`,
		  </if>
		  <if test="updateTime != null" >
			`update_time`,
		  </if>
		  <if test="isHidden != null" >
			`is_hidden`,
		  </if>
		  <if test="isValid != null" >
			`is_valid`,
		  </if>
		  <if test="speakType != null" >
			`speak_type`,
		  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="code != null" >
			#{code},
		  </if>
		  <if test="cityCode != null" >
			#{cityCode},
		  </if>
		  <if test="content != null" >
			#{content},
		  </if>
		  <if test="userCode != null" >
			#{userCode},
		  </if>
		  <if test="userName != null" >
			#{userName},
		  </if>
		  <if test="likeNumber != null" >
			#{likeNumber},
		  </if>
		  <if test="version != null" >
			#{version},
		  </if>
		  <if test="txid != null" >
			#{txid},
		  </if>
		  <if test="addTime != null" >
			#{addTime},
		  </if>
		  <if test="updateTime != null" >
			#{updateTime},
		  </if>
		  <if test="isHidden != null" >
			#{isHidden},
		  </if>
		  <if test="isValid != null" >
			#{isValid},
		  </if>
		  <if test="speakType != null" >
			#{speakType},
		  </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinmimoney.web.p2pnew.pojo.CityOnChat" >
    UPDATE `city_on_chat`
    <set >
	  <if test="code != null" >
        `code` = #{code},
      </if>
	  <if test="cityCode != null" >
        `city_code` = #{cityCode},
      </if>
	  <if test="content != null" >
        `content` = #{content},
      </if>
	  <if test="userCode != null" >
        `user_code` = #{userCode},
      </if>
	  <if test="userName != null" >
        `user_name` = #{userName},
      </if>
	  <if test="likeNumber != null" >
        `like_number` = #{likeNumber},
      </if>
	  <if test="version != null" >
        `version` = #{version},
      </if>
	  <if test="txid != null" >
        `txid` = #{txid},
      </if>
	  <if test="addTime != null" >
        `add_time` = #{addTime},
      </if>
	  <if test="updateTime != null" >
        `update_time` = #{updateTime},
      </if>
	  <if test="isHidden != null" >
        `is_hidden` = #{isHidden},
      </if>
	  <if test="isValid != null" >
        `is_valid` = #{isValid},
      </if>
	  <if test="speakType != null" >
        `speak_type` = #{speakType},
      </if>
    </set>
    WHERE `id` = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinmimoney.web.p2pnew.pojo.CityOnChat" >
	UPDATE `city_on_chat` SET
        `code` = #{code},
        `city_code` = #{cityCode},
        `content` = #{content},
        `user_code` = #{userCode},
        `user_name` = #{userName},
        `like_number` = #{likeNumber},
        `version` = #{version},
        `txid` = #{txid},
        `add_time` = #{addTime},
        `update_time` = #{updateTime},
        `is_hidden` = #{isHidden},
        `is_valid` = #{isValid},
        `speak_type` = #{speakType}
    WHERE `id` = #{id}
  </update>
  <update id="updateByCondition" parameterType="java.util.Map" >
    UPDATE `city_on_chat`
    <set>
	  <if test="entity.code != null" >
        `code` = #{entity.code},
      </if>
	  <if test="entity.cityCode != null" >
        `city_code` = #{entity.cityCode},
      </if>
	  <if test="entity.content != null" >
        `content` = #{entity.content},
      </if>
	  <if test="entity.userCode != null" >
        `user_code` = #{entity.userCode},
      </if>
	  <if test="entity.userName != null" >
        `user_name` = #{entity.userName},
      </if>
	  <if test="entity.likeNumber != null" >
        `like_number` = #{entity.likeNumber},
      </if>
	  <if test="entity.version != null" >
        `version` = #{entity.version},
      </if>
	  <if test="entity.txid != null" >
        `txid` = #{entity.txid},
      </if>
	  <if test="entity.addTime != null" >
        `add_time` = #{entity.addTime},
      </if>
	  <if test="entity.updateTime != null" >
        `update_time` = #{entity.updateTime},
      </if>
	  <if test="entity.isHidden != null" >
        `is_hidden` = #{entity.isHidden},
      </if>
	  <if test="entity.isValid != null" >
        `is_valid` = #{entity.isValid},
      </if>
	  <if test="entity.speakType != null" >
        `speak_type` = #{entity.speakType},
      </if>
      <foreach collection="entity.nullColums" item="nullColum">
        `${nullColum}` = NULL,
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <update id="updateIncreateNumbers" parameterType="java.util.Map" >
    UPDATE `city_on_chat`
    <set>
      <foreach collection="increateNumbers" item="numberCloums">
        `${numberCloums.column}` = `${numberCloums.column}` + #{numberCloums.number},
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <sql id="map_params_where_condition" >
    <trim prefix="WHERE" prefixOverrides="AND">
	  <if test="id != null" >
        AND `id` = #{id}
	  </if>
	  <if test="code != null" >
        AND `code` = #{code}
	  </if>
	  <if test="cityCode != null" >
        AND `city_code` = #{cityCode}
	  </if>
	  <if test="content != null" >
        AND `content` = #{content}
	  </if>
	  <if test="userCode != null" >
        AND `user_code` = #{userCode}
	  </if>
	  <if test="userName != null" >
        AND `user_name` = #{userName}
	  </if>
	  <if test="likeNumber != null" >
        AND `like_number` = #{likeNumber}
	  </if>
	  <if test="version != null" >
        AND `version` = #{version}
	  </if>
	  <if test="txid != null" >
        AND `txid` = #{txid}
	  </if>
	  <if test="addTime != null" >
        AND `add_time` = #{addTime}
	  </if>
	  <if test="updateTime != null" >
        AND `update_time` = #{updateTime}
	  </if>
	  <if test="isHidden != null" >
        AND `is_hidden` = #{isHidden}
	  </if>
	  <if test="isValid != null" >
        AND `is_valid` = #{isValid}
	  </if>
	  <if test="speakType != null" >
        AND `speak_type` = #{speakType}
	  </if>
	  <if test="condition != null">
	  <if test="condition.id != null" >
        AND `id` = #{condition.id}
	  </if>
	  <if test="condition.code != null" >
        AND `code` = #{condition.code}
	  </if>
	  <if test="condition.cityCode != null" >
        AND `city_code` = #{condition.cityCode}
	  </if>
	  <if test="condition.content != null" >
        AND `content` = #{condition.content}
	  </if>
	  <if test="condition.userCode != null" >
        AND `user_code` = #{condition.userCode}
	  </if>
	  <if test="condition.userName != null" >
        AND `user_name` = #{condition.userName}
	  </if>
	  <if test="condition.likeNumber != null" >
        AND `like_number` = #{condition.likeNumber}
	  </if>
	  <if test="condition.version != null" >
        AND `version` = #{condition.version}
	  </if>
	  <if test="condition.txid != null" >
        AND `txid` = #{condition.txid}
	  </if>
	  <if test="condition.addTime != null" >
        AND `add_time` = #{condition.addTime}
	  </if>
	  <if test="condition.updateTime != null" >
        AND `update_time` = #{condition.updateTime}
	  </if>
	  <if test="condition.isHidden != null" >
        AND `is_hidden` = #{condition.isHidden}
	  </if>
	  <if test="condition.isValid != null" >
        AND `is_valid` = #{condition.isValid}
	  </if>
	  <if test="condition.speakType != null" >
        AND `speak_type` = #{condition.speakType}
	  </if>
	  </if>
	  <if test="vo != null and !vo.expressionChainList.empty">
        AND
        <foreach collection="vo.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <if test="expressionChainList != null and !expressionChainList.empty">
        AND
        <foreach collection="expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <include refid="map_params_where_condition_ext" />
    </trim>
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM `city_on_chat`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
    <if test="pageBeginIndex != null and pageSize != null" >
      LIMIT #{pageBeginIndex},#{pageSize}
    </if>
    <if test="pageBeginIndex == null and pageSize != null" >
      LIMIT #{pageSize}
    </if>
    <if test="pageBeginIndex != null and pageSize == null" >
      LIMIT #{pageBeginIndex}
    </if>
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    DELETE
    FROM `city_on_chat`
    <include refid="map_params_where_condition" />
  </delete>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT COUNT(1)
    FROM `city_on_chat`
    <include refid="map_params_where_condition" />
  </select>
</mapper>